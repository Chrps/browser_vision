{"version":3,"file":"js/133.65663d0a.js","mappings":"iOAGA,MAAMA,EAAeC,KAAMC,EAAAA,EAAAA,IAAa,mBAAmBD,EAAEA,KAAIE,EAAAA,EAAAA,MAAcF,GACzEG,EAA2BJ,GAAa,KAAmBK,EAAAA,EAAAA,GAAoB,QAAS,CAC5FC,IAAK,aACLC,MAAO,mBACPC,MAAO,CAAC,QAAU,SACjB,MAAO,KACJC,EAAa,CAAEF,MAAO,mBACtBG,EAA2BV,GAAa,KAAmBK,EAAAA,EAAAA,GAAoB,SAAU,CAAEM,GAAI,gBAAkB,MAAO,KAK9H,OAA4BC,EAAAA,EAAAA,IAAiB,CAC3CC,KAAM,YACNC,KAAAA,CAAMC,GCyBR,MAAMC,EAAmB,CACvB,YACA,aACA,YACA,aACA,0BACA,2BACA,0BACA,0BACA,0BACA,aACA,gBACA,qBACA,0BAGIC,EAAeC,IACnB,MAAMC,EAAeD,EAAEE,OACvB,IAAKD,EAAaE,MAChB,OAEF,MAAMC,EAAcC,IAAIC,gBAAgBL,EAAaE,MAAM,IACrDI,EAA+BC,SAASC,eAC5C,YAEU,OAARF,GACJA,EAAIG,aAAa,MAAON,EAAI,EAGxBO,EAAiBA,KACrB,MAAMV,EAAeO,SAASC,eAC5B,cAEFR,EAAaW,OAAO,EAGhBC,EAAsBb,IAC1B,MAAMc,EAAMC,IAAAA,OAAUf,EAAEE,QACxBa,IAAAA,SAAYD,EAAKA,EAAKC,IAAAA,iBACtBA,IAAAA,OAAU,eAAgBD,EAAI,EAG1BE,EAAahB,IACjBA,EAAEiB,gBAAgB,EAIdC,EAAYlB,IAChBA,EAAEiB,gBAAgB,EAIdE,EAAanB,MAIboB,EAAcpB,IAClBA,EAAEiB,iBACF,MAAMI,EAAQrB,EAAEsB,cAAcD,MAE9B,GAAKA,EACL,IAAK,MAAME,KAAQF,EAAO,CACxB,GAAkB,SAAdE,EAAKC,MAAmB1B,EAAiB2B,SAASF,EAAKG,MAAO,CAChE,MAAMC,EAAOJ,EAAKK,YAClB,IAAKD,EAEH,YADAE,QAAQC,MAAM,yBAGhB,MAAM1B,EAAcC,IAAIC,gBAAgBqB,GAClCpB,EAAMC,SAASC,eAAe,YACpCF,GAAKG,aAAa,MAAON,GACzB,K,CAEFyB,QAAQC,MAAM,wB,GDnBlB,MAAO,CAACC,EAAUC,MACRC,EAAAA,EAAAA,OAAcC,EAAAA,EAAAA,IAAoB,MAAO,KAAM,CACrDhD,GACAC,EAAAA,EAAAA,GAAoB,QAAS,CAC3BuC,KAAM,OACNS,OAAQ,UACR1C,GAAI,aACJ2C,SAAUrC,EACVT,MAAO,CAAC,SAAW,WAAW,MAAQ,IAAI,OAAS,IAAI,QAAU,IAAI,OAAS,UAAU,IAAM,IAAI,KAAO,MACxG,KAAM,KACTH,EAAAA,EAAAA,GAAoB,MAAO,CACzBE,MAAO,YACPgD,YAAarB,EACbsB,WAAYpB,EACZqB,YAAapB,EACbqB,OAAQpB,EACRqB,QAAS9B,GACR,oDAAqD,KACxDxB,EAAAA,EAAAA,GAAoB,MAAOI,EAAY,EACrCJ,EAAAA,EAAAA,GAAoB,MAAO,CACzBuD,OAAQ7B,EACRpB,GAAI,YACH,KAAM,IACTD,MAIN,I,UErHA,MAAMmD,GAA2B,OAAgB,EAAQ,CAAC,CAAC,YAAY,qBAEvE,O","sources":["webpack://browser-vision/./src/views/ImagePage.vue?d639","webpack://browser-vision/./src/views/ImagePage.vue","webpack://browser-vision/./src/views/ImagePage.vue?ac58"],"sourcesContent":["import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-ac1c90a4\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"imageInput\",\n  class: \"file-input-label\",\n  style: {\"display\":\"none\"}\n}, null, -1))\nconst _hoisted_2 = { class: \"image-container\" }\nconst _hoisted_3 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"canvas\", { id: \"outputCanvas\" }, null, -1))\n\nimport cv from \"opencv-ts\";\n\n\nexport default /*#__PURE__*/_defineComponent({\n  name: 'ImagePage',\n  setup(__props) {\n\nconst supportedFormats = [\n  \"image/bmp\",\n  \"image/jpeg\",\n  \"image/png\",\n  \"image/webp\",\n  \"image/x-portable-bitmap\",\n  \"image/x-portable-graymap\",\n  \"image/x-portable-pixmap\",\n  \"image/x-portable-anymap\",\n  \"image/x-portable-raster\",\n  \"image/tiff\",\n  \"image/tiff-fx\",\n  \"image/vnd.radiance\",\n  \"image/vnd.radiance.rgb\",\n];\n\nconst uploadImage = (e: Event): void => {\n  const inputElement = e.target as HTMLInputElement;\n  if (!inputElement.files) {\n    return;\n  }\n  const src: string = URL.createObjectURL(inputElement.files[0]);\n  const img: HTMLImageElement | null = document.getElementById(\n    \"srcImage\"\n  ) as HTMLImageElement;\n  if (img === null) return;\n  img.setAttribute(\"src\", src);\n};\n\nconst openFileDialog = (): void => {\n  const inputElement = document.getElementById(\n    \"imageInput\"\n  ) as HTMLInputElement;\n  inputElement.click();\n};\n\nconst handleImgSrcChange = (e: any): void => {\n  const mat = cv.imread(e.target);\n  cv.cvtColor(mat, mat, cv.COLOR_RGBA2GRAY);\n  cv.imshow(\"outputCanvas\", mat);\n};\n\nconst dragEnter = (e: DragEvent): void => {\n  e.preventDefault();\n  // Add any visual feedback for drag enter, e.g., highlighting the drop zone.\n};\n\nconst dragOver = (e: DragEvent): void => {\n  e.preventDefault();\n  // Add any visual feedback for drag over, e.g., changing the cursor style.\n};\n\nconst dragLeave = (e: DragEvent): void => {\n  // Remove any visual feedback on drag leave.\n};\n\nconst handleDrop = (e: DragEvent): void => {\n  e.preventDefault();\n  const items = e.dataTransfer?.items;\n  // check if dropped items are files and they are images of supported formats\n  if (!items) return;\n  for (const item of items) {\n    if (item.kind === \"file\" && supportedFormats.includes(item.type)) {\n      const file = item.getAsFile();\n      if (!file) {\n        console.error(\"File is not supported\");\n        return;\n      }\n      const src: string = URL.createObjectURL(file);\n      const img = document.getElementById(\"srcImage\") as HTMLImageElement;\n      img?.setAttribute(\"src\", src);\n      break;\n    }\n    console.error(\"File is not supported\");\n  }\n};\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", null, [\n    _hoisted_1,\n    _createElementVNode(\"input\", {\n      type: \"file\",\n      accept: \"image/*\",\n      id: \"imageInput\",\n      onChange: uploadImage,\n      style: {\"position\":\"absolute\",\"width\":\"0\",\"height\":\"0\",\"opacity\":\"0\",\"cursor\":\"pointer\",\"top\":\"0\",\"left\":\"0\"}\n    }, null, 32),\n    _createElementVNode(\"div\", {\n      class: \"drop-zone\",\n      onDragenter: dragEnter,\n      onDragover: dragOver,\n      onDragleave: dragLeave,\n      onDrop: handleDrop,\n      onClick: openFileDialog\n    }, \" Drag and drop an image here or click to upload. \", 32),\n    _createElementVNode(\"div\", _hoisted_2, [\n      _createElementVNode(\"img\", {\n        onLoad: handleImgSrcChange,\n        id: \"srcImage\"\n      }, null, 32),\n      _hoisted_3\n    ])\n  ]))\n}\n}\n\n})","<template>\n  <div>\n    <label\n      for=\"imageInput\"\n      class=\"file-input-label\"\n      style=\"display: none\"\n    ></label>\n    <input\n      type=\"file\"\n      accept=\"image/*\"\n      id=\"imageInput\"\n      @change=\"uploadImage\"\n      style=\"\n        position: absolute;\n        width: 0;\n        height: 0;\n        opacity: 0;\n        cursor: pointer;\n        top: 0;\n        left: 0;\n      \"\n    />\n    <div\n      class=\"drop-zone\"\n      @dragenter=\"dragEnter\"\n      @dragover=\"dragOver\"\n      @dragleave=\"dragLeave\"\n      @drop=\"handleDrop\"\n      @click=\"openFileDialog\"\n    >\n      Drag and drop an image here or click to upload.\n    </div>\n    <div class=\"image-container\">\n      <img @load=\"handleImgSrcChange\" id=\"srcImage\" />\n      <canvas id=\"outputCanvas\"></canvas>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport cv from \"opencv-ts\";\n\nconst supportedFormats = [\n  \"image/bmp\",\n  \"image/jpeg\",\n  \"image/png\",\n  \"image/webp\",\n  \"image/x-portable-bitmap\",\n  \"image/x-portable-graymap\",\n  \"image/x-portable-pixmap\",\n  \"image/x-portable-anymap\",\n  \"image/x-portable-raster\",\n  \"image/tiff\",\n  \"image/tiff-fx\",\n  \"image/vnd.radiance\",\n  \"image/vnd.radiance.rgb\",\n];\n\nconst uploadImage = (e: Event): void => {\n  const inputElement = e.target as HTMLInputElement;\n  if (!inputElement.files) {\n    return;\n  }\n  const src: string = URL.createObjectURL(inputElement.files[0]);\n  const img: HTMLImageElement | null = document.getElementById(\n    \"srcImage\"\n  ) as HTMLImageElement;\n  if (img === null) return;\n  img.setAttribute(\"src\", src);\n};\n\nconst openFileDialog = (): void => {\n  const inputElement = document.getElementById(\n    \"imageInput\"\n  ) as HTMLInputElement;\n  inputElement.click();\n};\n\nconst handleImgSrcChange = (e: any): void => {\n  const mat = cv.imread(e.target);\n  cv.cvtColor(mat, mat, cv.COLOR_RGBA2GRAY);\n  cv.imshow(\"outputCanvas\", mat);\n};\n\nconst dragEnter = (e: DragEvent): void => {\n  e.preventDefault();\n  // Add any visual feedback for drag enter, e.g., highlighting the drop zone.\n};\n\nconst dragOver = (e: DragEvent): void => {\n  e.preventDefault();\n  // Add any visual feedback for drag over, e.g., changing the cursor style.\n};\n\nconst dragLeave = (e: DragEvent): void => {\n  // Remove any visual feedback on drag leave.\n};\n\nconst handleDrop = (e: DragEvent): void => {\n  e.preventDefault();\n  const items = e.dataTransfer?.items;\n  // check if dropped items are files and they are images of supported formats\n  if (!items) return;\n  for (const item of items) {\n    if (item.kind === \"file\" && supportedFormats.includes(item.type)) {\n      const file = item.getAsFile();\n      if (!file) {\n        console.error(\"File is not supported\");\n        return;\n      }\n      const src: string = URL.createObjectURL(file);\n      const img = document.getElementById(\"srcImage\") as HTMLImageElement;\n      img?.setAttribute(\"src\", src);\n      break;\n    }\n    console.error(\"File is not supported\");\n  }\n};\n</script>\n\n<style scoped>\n.drop-zone {\n  border: 2px dashed #4caf50; /* Green border color */\n  background: #e8f5e9; /* Light green background color */\n  padding: 20px;\n  text-align: center;\n  cursor: pointer;\n  transition: background-color 0.3s ease; /* Add a transition for a smoother hover effect */\n  /* dark green text color*/\n  color: #023020;\n}\n\n.drop-zone:hover {\n  background: #c8e6c9; /* Darker green background color on hover */\n}\n\n/* Additional styling for the file input */\n#imageInput {\n  display: none; /* Hide the file input */\n}\n\n/* Recommended color palette */\n:root {\n  --primary-color: #4caf50; /* Green */\n  --background-color: #e8f5e9; /* Light green background */\n  --text-color: #333; /* Dark gray text color */\n  --accent-color: #2196f3; /* Accent color for buttons, links, etc. */\n}\n.image-container {\n  margin-top: 20px;\n}\n</style>\n","import script from \"./ImagePage.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./ImagePage.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./ImagePage.vue?vue&type=style&index=0&id=ac1c90a4&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-ac1c90a4\"]])\n\nexport default __exports__"],"names":["_withScopeId","n","_pushScopeId","_popScopeId","_hoisted_1","_createElementVNode","for","class","style","_hoisted_2","_hoisted_3","id","_defineComponent","name","setup","__props","supportedFormats","uploadImage","e","inputElement","target","files","src","URL","createObjectURL","img","document","getElementById","setAttribute","openFileDialog","click","handleImgSrcChange","mat","cv","dragEnter","preventDefault","dragOver","dragLeave","handleDrop","items","dataTransfer","item","kind","includes","type","file","getAsFile","console","error","_ctx","_cache","_openBlock","_createElementBlock","accept","onChange","onDragenter","onDragover","onDragleave","onDrop","onClick","onLoad","__exports__"],"sourceRoot":""}